## Sam Iles
## Lab 03, GEOG 676 SP24
## 02-06-2024
## -----

# Tasks: 
# (1) read data from the provided text file (20 pts)
# (2) create a class for each shape in the text file (20 pts)
# (3) For each line, create a new object determined by the shape (e.g. Triangle object for line Triangle,8,1 base and height) (30pt)
# (4) Iterate through your list and print out the area for each shape (30pt)

# (1): Read file
file = open(r"P:\676\lab_03\shapes.txt","r")
shapes = file.readlines() 
file.close() #don't forget to close the file

# (2): Create classes
class Shape:
    def __init__(self):
        pass

class Rectangle(Shape):
    def __init__(self, l, w):
        self.l = l #length & width
        self.w = w
    def Area(self):
        return self.l * self.w

class Circle(Shape):
    def __init__(self, r):
        self.r = r #radius
    def Area(self):
        return 3.14156 * self.r * self.r

class Triangle(Shape):
    def __init__(self, b, h): 
        self.b = b #base an& height
        self.h = h
    def Area(self):
        return 0.5 * self.b * self.h

# (3)(4): Create objects for each shape and print resulting areas
shape_areas = ()
for line in shapes: #caution--data is in string so cannot be manipulated
    line = line.split(",")
    #type(int(line[1:])) 
    name = line[0]
#how to recast lines in shapes after the first item (i.e. line[1:] to be type int ?)    
#line = [type(int(line[1:])) for line in shapes]
    if name == "Rectangle":
        rect = Rectangle(int(line[1]), int(line[2])) #2nd and 3rd item in line = len & width
        print('Area of rectangle =  ',rect.Area())
        #shape_areas.append('Area of rectangle =  ',rect.Area())
    elif name == "Triangle":
        tri = Triangle(int(line[1]), int(line[2])) 
        print('Area of triangle =  ',tri.Area())
    elif name == "Circle":
        circ = Circle(int(line[1])) 
        print('Area of circle =  ',circ.Area())
    else:
        pass
